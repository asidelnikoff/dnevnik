openapi: 3.0.1
info:
  title: TimeTable
  version: '1.0'
paths:
  /Lesson/{id}:
    get:
      tags:
        - Lesson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LessonResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/LessonResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LessonResponse'
    put:
      tags:
        - Lesson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: subject
          in: query
          schema:
            type: string
        - name: userId
          in: query
          schema:
            type: string
            format: uuid
        - name: className
          in: query
          schema:
            type: string
        - name: taskId
          in: query
          schema:
            type: string
            format: uuid
        - name: date
          in: query
          schema:
            $ref: '#/components/schemas/DateOnly'
        - name: startTime
          in: query
          schema:
            $ref: '#/components/schemas/TimeOnly'
        - name: endtime
          in: query
          schema:
            $ref: '#/components/schemas/TimeOnly'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Lesson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /Lesson:
    get:
      tags:
        - Lesson
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
    post:
      tags:
        - Lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonWithOutID'
          text/json:
            schema:
              $ref: '#/components/schemas/LessonWithOutID'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LessonWithOutID'
      responses:
        '200':
          description: Success
  /Lesson/CreateWithRepeat:
    post:
      tags:
        - Lesson
      parameters:
        - name: days
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DayOfWeek'
        - name: startPeriod
          in: query
          schema:
            $ref: '#/components/schemas/DateOnly'
        - name: endPeriod
          in: query
          schema:
            $ref: '#/components/schemas/DateOnly'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonWithOutIDnDate'
          text/json:
            schema:
              $ref: '#/components/schemas/LessonWithOutIDnDate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LessonWithOutIDnDate'
      responses:
        '200':
          description: Success
  /Mark:
    post:
      tags:
        - Mark
      parameters:
        - name: Date
          in: query
          schema:
            type: string
            format: date-time
        - name: TeacherID
          in: query
          schema:
            type: string
            format: uuid
        - name: StudentID
          in: query
          schema:
            type: string
            format: uuid
        - name: Comment
          in: query
          schema:
            type: string
        - name: LessonID
          in: query
          schema:
            type: string
            format: uuid
        - name: Mark
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /Schedule:
    get:
      tags:
        - Schedule
      parameters:
        - name: startTime
          in: query
          schema:
            $ref: '#/components/schemas/TimeOnly'
        - name: endTime
          in: query
          schema:
            $ref: '#/components/schemas/TimeOnly'
        - name: startDate
          in: query
          schema:
            $ref: '#/components/schemas/DateOnly'
        - name: endDate
          in: query
          schema:
            $ref: '#/components/schemas/DateOnly'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
  /Schedule/user/{id}:
    get:
      tags:
        - Schedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: startTime
          in: query
          schema:
            $ref: '#/components/schemas/TimeOnly'
        - name: endTime
          in: query
          schema:
            $ref: '#/components/schemas/TimeOnly'
        - name: startDate
          in: query
          schema:
            $ref: '#/components/schemas/DateOnly'
        - name: endDate
          in: query
          schema:
            $ref: '#/components/schemas/DateOnly'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
  /Schedule/class/{className}:
    get:
      tags:
        - Schedule
      parameters:
        - name: className
          in: path
          required: true
          schema:
            type: string
        - name: startTime
          in: query
          schema:
            $ref: '#/components/schemas/TimeOnly'
        - name: endTime
          in: query
          schema:
            $ref: '#/components/schemas/TimeOnly'
        - name: startDate
          in: query
          schema:
            $ref: '#/components/schemas/DateOnly'
        - name: endDate
          in: query
          schema:
            $ref: '#/components/schemas/DateOnly'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
components:
  schemas:
    DateOnly:
      type: object
      properties:
        year:
          type: integer
          format: int32
        month:
          type: integer
          format: int32
        day:
          type: integer
          format: int32
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        dayOfYear:
          type: integer
          format: int32
          readOnly: true
        dayNumber:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    DayOfWeek:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    LessonResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        subject:
          type: string
          nullable: true
        userId:
          type: string
          format: uuid
        className:
          type: string
          nullable: true
        taskID:
          type: string
          format: uuid
        date:
          $ref: '#/components/schemas/DateOnly'
        startTime:
          $ref: '#/components/schemas/TimeOnly'
        endTime:
          $ref: '#/components/schemas/TimeOnly'
      additionalProperties: false
    LessonWithOutID:
      type: object
      properties:
        subject:
          type: string
          nullable: true
        userId:
          type: string
          format: uuid
        className:
          type: string
          nullable: true
        taskID:
          type: string
          format: uuid
          nullable: true
        date:
          $ref: '#/components/schemas/DateOnly'
        startTime:
          $ref: '#/components/schemas/TimeOnly'
        endTime:
          $ref: '#/components/schemas/TimeOnly'
      additionalProperties: false
    LessonWithOutIDnDate:
      type: object
      properties:
        subject:
          type: string
          nullable: true
        userId:
          type: string
          format: uuid
        className:
          type: string
          nullable: true
        taskID:
          type: string
          format: uuid
          nullable: true
        startTime:
          $ref: '#/components/schemas/TimeOnly'
        endTime:
          $ref: '#/components/schemas/TimeOnly'
      additionalProperties: false
    TimeOnly:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
          readOnly: true
        millisecond:
          type: integer
          format: int32
          readOnly: true
        microsecond:
          type: integer
          format: int32
          readOnly: true
        nanosecond:
          type: integer
          format: int32
          readOnly: true
        ticks:
          type: integer
          format: int64
          readOnly: true
      additionalProperties: false
